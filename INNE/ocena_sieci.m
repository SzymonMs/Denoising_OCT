DNCNN = readCSVAsVectors('CAVRI_DANE\DnCNN.csv');
DNCNN_PSNR = DNCNN.PSNRs;
DNCNN_SSIM = DNCNN.SSIMs;
DNCNN_Times = DNCNN.Times;

CP25_DNCNNPSNR = prctile(DNCNN_PSNR,25);
CP75_DNCNNPSNR = prctile(DNCNN_PSNR,75);
min_DNCNNPSNR = min(DNCNN_PSNR);
max_DNCNNPSNR = max(DNCNN_PSNR);
std_DNCNNPSNR = std(DNCNN_PSNR);
CP25_DNCNNSSIM = prctile(DNCNN_SSIM,25);
CP75_DNCNNSSIM = prctile(DNCNN_SSIM,75);
min_DNCNNSSIM = min(DNCNN_SSIM);
max_DNCNNSSIM = max(DNCNN_SSIM);
std_DNCNNSSIM = std(DNCNN_SSIM);
min_DNCNNTIMES = min(DNCNN_Times);
max_DNCNNTIMES = max(DNCNN_Times);

FFDNET = readCSVAsVectors('CAVRI_DANE\FFDNET.csv');
FFDNET_PSNR = FFDNET.PSNRs;
FFDNET_SSIM = FFDNET.SSIMs;
FFDNET_Times = FFDNET.Times;

CP25_FFDNETPSNR = prctile(FFDNET_PSNR,25);
CP75_FFDNETPSNR = prctile(FFDNET_PSNR,75);
min_FFDNETPSNR = min(FFDNET_PSNR);
max_FFDNETPSNR = max(FFDNET_PSNR);
std_FFDNETPSNR = std(FFDNET_PSNR);
CP25_FFDNETSSIM = prctile(FFDNET_SSIM,25);
CP75_FFDNETSSIM = prctile(FFDNET_SSIM,75);
min_FFDNETSSIM = min(FFDNET_SSIM);
max_FFDNETSSIM = max(FFDNET_SSIM);
std_FFDNETSSIM = std(FFDNET_SSIM);
min_FFDNETTIMES = min(FFDNET_Times);
max_FFDNETTIMES = max(FFDNET_Times);

ADNET = readCSVAsVectors('CAVRI_DANE/ADNET_REZULTATY [MConverter.eu].csv');
ADNET_PSNR = ADNET.Var2;
ADNET_SSIM = ADNET.Var3;
ADNET_Times = ADNET.Var4;

CP25_ADNETPSNR = prctile(ADNET_PSNR,25);
CP75_ADNETPSNR = prctile(ADNET_PSNR,75);
min_ADNETPSNR = min(ADNET_PSNR);
max_ADNETPSNR = max(ADNET_PSNR);
std_ADNETPSNR = std(ADNET_PSNR);
CP25_ADNETSSIM = prctile(ADNET_SSIM,25);
CP75_ADNETSSIM = prctile(ADNET_SSIM,75);
min_ADNETSSIM = min(ADNET_SSIM);
max_ADNETSSIM = max(ADNET_SSIM);
std_ADNETSSIM = std(ADNET_SSIM);
min_ADNETTIMES = min(ADNET_Times);
max_ADNETTIMES = max(ADNET_Times);


boxplot([DNCNN_PSNR,FFDNET_PSNR,ADNET_PSNR],'Labels',{{'DnCNN','FFDNet','ADNet'}}, 'Symbol',' ','Orientation','vertical')
title('PSNR dla sieci neuronowych')
xlabel('PSNR [dB]')